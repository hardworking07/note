"""""""""""""""""""""""""""""""""
" => Environment
" => General
" => VIM User Interface
" => Editing Mappings
" => Code Display 
" => Plugins
" => Others 
"""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""
" => Environment
"""""""""""""""""""""""""""""""""
" Identify platform {
        silent function! OSX()
            return has('macunix')
        endfunction
        silent function! LINUX()
            return has('unix') && !has('macunix') && !has('win32unix')
        endfunction
        silent function! WINDOWS()
            return  (has('win32') || has('win64'))
        endfunction
    " }

    " Basics {
        set nocompatible        " Must be first line
        if !WINDOWS()
            set shell=/bin/sh
        endif
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if WINDOWS()
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
        endif
    " }
    
    " Arrow Key Fix {
        " https://github.com/spf13/spf13-vim/issues/780
        if &term[:4] == "xterm" || &term[:5] == 'screen' || &term[:3] == 'rxvt'
            inoremap <silent> <C-[>OC <RIGHT>
        endif
    " }

" }



"""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""
" 定义快捷键的前缀，即<Leader>
let mapleader=";"

" 开启文件类型侦测
filetype on
" 根据侦测到的不同类型加载对应的插件
filetype plugin on 

" 开启实时搜索功能
set incsearch
" 搜索时大小写不敏感
set ignorecase
set smartcase
" 高亮显示搜索结果
set hlsearch
" 关闭兼容模式
set nocompatible
" vim 自身命令行模式智能补全
set wildmenu

set history=1000
set showmatch
" 光标在行首尾可以进入另一行
set whichwrap=b,s,h,l,<,>,[,]

"""""""""""""""""""""""""""""""""
" => VIM User Interface
"""""""""""""""""""""""""""""""""
" font
if LINUX()
    set guifont=Consolas\ 14
elseif OSX()
    set guifont=Consolas:h16
endif

" 总是显示状态栏
set laststatus=2
" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
set showmode
set tabpagemax=15 
set showcmd

"""""""""""""""""""""""""""""""""
" => Editing Mappings
"""""""""""""""""""""""""""""""""
" 定义快捷键到行首和行尾
"nmap LB 0
"nmap LE $

" 设置Esc
inoremap jk <ESC>

" 设置快捷键将选中文本块复制至系统剪贴板
vnoremap <Leader>y "+y
" 设置快捷键将系统剪贴板内容粘贴至 vim
nmap <Leader>p "+p
" 定义快捷键关闭当前分割窗口
nmap <Leader>q :q<CR>
" 定义快捷键保存当前窗口内容
nmap <Leader>w :w<CR>
" 定义快捷键保存所有窗口内容并退出 vim
nmap <Leader>WQ :wa<CR>:q<CR>
" 不做任何保存，直接退出 vim
nmap <Leader>Q :qa!<CR>

" 依次遍历子窗口
nnoremap nw <C-W><C-W>
" 跳转至右方的窗口
nnoremap <Leader>lw <C-W>l
" 跳转至左方的窗口
nnoremap <Leader>hw <C-W>h
" 跳转至上方的子窗口
nnoremap <Leader>kw <C-W>k
" 跳转至下方的子窗口
nnoremap <Leader>jw <C-W>j
" 定义快捷键在结对符之间跳转
nmap <Leader>M %


"""""""""""""""""""""""""""""""""
" => Code Display 
"""""""""""""""""""""""""""""""""
" 开启语法高亮功能
syntax enable
" 允许用指定语法高亮配色方案替换默认方案
syntax on
" 自适应不同语言的智能缩进
filetype indent on
" 将制表符扩展为空格
set expandtab
" 设置编辑时制表符占用空格数
set tabstop=4
" 设置格式化时制表符占用空格数
set shiftwidth=4
" 让 vim 把连续数量的空格视为一个制表符
set softtabstop=4


"""""""""""""""""""""""""""""""""""
" => General Plugins
"""""""""""""""""""""""""""""""""""
" vundle 环境设置
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
" vundle 管理的插件列表必须位于 vundle#begin() 和 vundle#end() 之间
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tomasr/molokai'
Plugin 'vim-scripts/phd'

" 状态栏优化
Plugin 'Lokaltog/powerline'
" 以树形显示目录
Plugin 'scrooloose/nerdtree'
" 成对插入删除( [{
Plugin 'jiangmiao/auto-pairs'
" viaully displaying indent levels
Plugin 'nathanaelkane/vim-indent-guides'

" Programming
" syntax check
Plugin 'scrooloose/syntastic'


" python
" check your python files with pep8
Plugin 'vim-scripts/pep8'


"  CPP
" cpp highlight
Plugin 'octol/vim-cpp-enhanced-highlight'

"Plugin 'derekwyatt/vim-fswitch'
"Plugin 'kshenoy/vim-signature'
"Plugin 'vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines'
"Plugin 'majutsushi/tagbar'
"Plugin 'vim-scripts/indexer.tar.gz'
"Plugin 'vim-scripts/DfrankUtil'
"Plugin 'vim-scripts/vimprj'
"Plugin 'dyng/ctrlsf.vim'
"Plugin 'terryma/vim-multiple-cursors'
"Plugin 'scrooloose/nerdcommenter'
"Plugin 'vim-scripts/DrawIt'
"Plugin 'SirVer/ultisnips'
"Plugin 'Valloric/YouCompleteMe'
"Plugin 'derekwyatt/vim-protodef'
"Plugin 'fholgado/minibufexpl.vim'
"Plugin 'gcmt/wildfire.vim'
"Plugin 'sjl/gundo.vim'
"Plugin 'Lokaltog/vim-easymotion'
"Plugin 'suan/vim-instant-markdown'
" 插件列表结束
call vundle#end()
filetype plugin indent on



"""""""""""""""""""""""""""""""""
" => Others 
"""""""""""""""""""""""""""""""""
" 配色方案
set background=dark
colorscheme solarized
"colorscheme molokai
"colorscheme phd

" 将外部命令 wmctrl 控制窗口最大化的命令行参数封装成一个 vim 的函数
fun! ToggleFullscreen()
	call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")
endf
" 启动 vim 时自动全屏
autocmd VimEnter * call ToggleFullscreen()
